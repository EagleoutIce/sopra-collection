\def\sol@lang@java@kwstyle{\solGetStyle{literals}}%
\def\sol@lang@java@annotations{\solGetStyle{comments}\itshape}%
\def\soljavaprintf#1{\solGet{keywordB}{#1}}
\lstdefinelanguage{lJava}{%
keywordstyle = [5]\sol@lang@java@kwstyle, % for other literals :D
keywordstyle = [6]\sol@lang@java@annotations, % for annotations
sensitive, % we are case sensitive
deletekeywords = {<>\,},alsoletter={@_},alsoother={[]},
comment=[l]{//},
moredelim=**[is][{\solhlbox{solwarning}}]{|warn|}{|warn|},
moredelim=**[is][{\solhlboxd{\solcustom}}]{|custom|}{|custom|},
moredelim=[is][]{|plain|}{|plain|},
moredelim=[is][\solGet{highlight}]{|ihl|}{|ihl|},
moredelim=**[is][\solGet{numbers}]{|num|}{|num|},
moredelim=**[is][\solGet{literals}]{|str|}{|str|},
moredelim=**[is][\solGet{comments}]{|cmt|}{|cmt|},
moredelim=**[is][\itshape\bfseries]{|bhl|}{|bhl|},
morecomment  =[s]{/*}{*/},
morestring = [s]"", % maybe use d?
morestring = [s]'',
columns = flexible,
morekeywords = {abstract,public,private,protected,static,class,interface,@interface,final,const,instanceof,synchronized,native,null,transient,volatile,default,extends,implements,import,package,new,for,goto,if,else,try,switch,case,catch,finally,break,continue,label,return,throw,throws,while,enum,do,assert,record},
morekeywords = [2]{boolean,Boolean,byte,Byte,char,Char,%
    double,Double,float,Float,int,Integer,Character,%
    long,Long,short,Short,this,super,void,String,var},
morekeywords = [3]{System,Objects,Stream,List,Map,Queue,Deque,ArrayList,SingleLinkedList,SortedList,SortedSet,Set,HashMap,Tree,HashSet,FileReader,BufferedReader,InputStream,BufferedInputStream,BufferedOutputStream,OutputStream,FileInputStream,FileOutputStream,FileWriter,File,LocalDate,Node,DocumentBuilder,Document,NodeList,Transformer,SimpleDateFormat,ArrayIndexOutOfBoundsException,IndexOutOfBoundsException,ArithmeticException,Error,InternalError,NoSuchElementException,BufferOverflowException,%
TransformerFactory,StreamResult,StreamSource,DriverManager,Connection,Statement,ResultSet,PreparedStatement,Text,Font,Application,Leaf,Component,Composite,Runtime,ExecutorService,Math,Executors,LinkedList,Callable,Cloneable,ExecutionException,InterruptedException,TimeUnit,Future,Thread,Predicate,Function,Color,Scene,Pattern,Matcher,Event,Camera,EventHandler,EventListener,EventType,Observer,Observable,ObservableList,ObservableMap,ObservableArray,Button,Pos,%
Scanner,Arrays,Calendar,GregorianCalendar,Date,UUID,Point,Element,Circle,Rectangle,Richtung,Schiene,FileChooser,Worker,InputStreamReader,Task,Service,IntStream,PrintWriter,PrintStream,Socket,ServerSocket,Lebewesen,Student,Dozent,Mensch,AbstractList,Sortable,Comparable,Throwable,Drawable,Moveable,Consumeable,AtomicByte,AtomicShort,AtomicInteger,AtomicLong,AtomicFloat,AtomicDouble,AtomicReference,Random,Query,Persistence,Attributes,Files,Paths,Collectors,Collection,Iterable,Iterator,Object,EOFException,NullPointerException,ClassNotFoundException,IOException,XPathConstants,ParseException,SQLException,Exception,RuntimeException,Runnable,IllegalStateException,UnaryOperator,IllegalArgumentException,GenerationType,Assertions,Executable,Duration,Class,Method,Locale,Executor,RecursiveTask,RecursiveAction,ForkJoinPool,ForkJoinTask,ThreadPoolExecutor,CountDownLatch,CyclicBarrier,Phaser,Semaphore,Collections,CopyOnWriteArrayList,CopyOnWriteArraySet,ConcurrentSkipListSet,ConcurrentSkipListMap,ConcurrentLinkedQueue,ConcurrentHashMap,ConcurrentMap,SynchronousQueue,PriorityBlockingQueue,LinkedBlockingQueue,LinkedTransferQueue,DelayQueue,ArrayBlockingQueue,TransferQueue,BlockingQueue,BlockingDequeue,AbstractExecutorService,PriorityQueue,ConcurrentModificationException,CallerRunsPolicy,ReentrantLock,Vector,ByteVector,ShortVector,IntVector,LongVector,FloatVector,DoubleVector,VectorShape,VectorMask,VectorSpecies,AtomicStampedReference,AtomicMarkableReference,ActionEvent,Remote,UnicastRemoteObject,LocalRegistry,RemoteException,Naming,MarshalException,KafkaProducer,ProducerRecord,Properties,ConsumerRecord,KakfaConsumer,NegativeArraySizeException,InvalidParameterException},
morekeywords=[4]{EMPTY,MAX_VALUE,MIN_VALUE,IDENTITY},
morekeywords=[5]{true,false},
morekeywords=[6]{@Override,@NonNull,@Test,@TestAnnotation,@Target,@Retention,@Repeatable,@Deprecated,@Documented,@RetentionPolicy,@BeforeEach,@AfterEach,@BeforeAll,@AfterAll,@ParameterizedTest,@MethodSource,@Order,@TestMethodOrder,@ValueSource,@DisplayName,@Repeatedtest,@TestInstance,@Tag,@Nullable,@ToString,@Getter,@Setter,@EqualsAndHashCode,@Slf4j},
add to literate={\\u}{{\solGet{keywordB}{\textbackslash u}}}2 {\\n}{{\solGet{keywordB}{\textbackslash n}}}2 {\\r}{{\solGet{keywordB}{\textbackslash r}}}2 {\\t}{{\solGet{keywordB}{\textbackslash t}}}2 {\\0}{{\solGet{keywordB}{\textbackslash 0}}}2 {\\033[}{{\solGet{keywordB}{\textbackslash033[}}}4 {\\\\}{{\solGet{keywordB}{\textbackslash\textbackslash}}}2 {\%c}{{\soljavaprintf{\%c}}}2 {\%d}{{\soljavaprintf{\%d}}}2 {\%s}{{\soljavaprintf{\%s}}}2 {\%n}{{\soljavaprintf{\%n}}}2 {\%b}{{\soljavaprintf{\%b}}}2 {0x}{{\solGet{comments}{0x}}}2 {0b}{{\solGet{comments}{0b}}}2 {\\"}{{\solGet{keywordB}{\textbackslash\dq}}}2 {:_:}{{\solGet{numbers}{\_}}}1%
}

\RegisterLanguage{java}{lJava}